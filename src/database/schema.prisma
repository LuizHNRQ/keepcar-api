// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model City {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  stateId   Int
  state     State    @relation(fields: [stateId], references: [id])

  @@map("cities")
}

model State {
  id        Int      @id @default(autoincrement())
  name      String
  fu        String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  City      City[]

  @@map("states")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  vehicles  Vehicle[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("users")
}

model Vehicle {
  id           String  @id
  nickname     String  @default("")
  maker        String
  model        String
  year         String
  plate        String
  color        String
  initialKm    Decimal
  km           Decimal
  purchaseYear String
  photo        String?
  makerId      String?
  modelId      String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  User   User? @relation(fields: [userId], references: [id])
  userId Int?

  events        Events[]
  VehicleShares VehicleShares[]

  @@map("vehicles")
}

model Events {
  id          Int       @id @default(autoincrement())
  title       String
  km          Decimal
  description String
  pictures    String
  price       Int?
  date        DateTime? @default(now()) @map("event_date")
  createdAt   DateTime? @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")

  Vehicle   Vehicle? @relation(fields: [vehicleId], references: [id])
  vehicleId String?

  Type        EventType? @relation(fields: [eventTypeId], references: [id])
  eventTypeId Int?
}

model EventType {
  id     Int      @id @default(autoincrement())
  title  String
  Events Events[]
}

model VehicleShares {
  id        String   @id
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  vehicleId String
  expiresAt DateTime
}
